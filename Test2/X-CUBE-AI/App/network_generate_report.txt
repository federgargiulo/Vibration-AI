Neural Network Tools for STM32AI v1.6.0 (STM.ai v7.3.0-RC5)
Created date          : 2023-02-20 11:24:53
Parameters            : generate --name network -m C:/Users/giaco/Downloads/modello_asc (2).h5 --type keras --compression none --verbosity 1 --workspace C:\Users\giaco\AppData\Local\Temp\mxAI_workspace273881431970013701518075411688874 --output C:\Users\giaco\.stm32cubemx\network_output --allocate-inputs --allocate-outputs

Exec/report summary (generate)
---------------------------------------------------------------------------------------------------------
model file         :   C:\Users\giaco\Downloads\modello_asc (2).h5                                      
type               :   keras                                                                            
c_name             :   network                                                                          
compression        :   none                                                                             
options            :   allocate-inputs, allocate-outputs                                                
optimization       :   balanced                                                                         
target/series      :   generic                                                                          
workspace dir      :   C:\Users\giaco\AppData\Local\Temp\mxAI_workspace273881431970013701518075411688874
output dir         :   C:\Users\giaco\.stm32cubemx\network_output                                       
model_fmt          :   float                                                                            
model_name         :   modello_asc_2                                                                    
model_hash         :   5d2cbc457bff1f52b6d02dd2c8a54bd3                                                 
params #           :   81 items (324 B)                                                                 
---------------------------------------------------------------------------------------------------------
input 1/1          :   'input_0' (domain:activations/**default**)                                       
                   :   6 items, 24 B, ai_float, float, (1,1,1,6)                                        
output 1/1         :   'dense_1' (domain:activations/**default**)                                       
                   :   1 items, 4 B, ai_float, float, (1,1,1,1)                                         
macc               :   101                                                                              
weights (ro)       :   324 B (324 B) (1 segment)                                                        
activations (rw)   :   64 B (64 B) (1 segment) *                                                        
ram (total)        :   64 B (64 B) = 64 + 0 + 0                                                         
---------------------------------------------------------------------------------------------------------
(*) 'input'/'output' buffers can be used from the activations buffer

Model name - modello_asc_2 ['input_0'] ['dense_1']
--------------------------------------------------------------------------------------------------------------------------------------------------------
id   layer (type,original)           oshape          param/size   macc   connected to    |   c_size          c_macc         c_type                     
--------------------------------------------------------------------------------------------------------------------------------------------------------
0    input_0 (Input, None)           [b:None,c:6]                                        |   +280(+100.0%)   +80(+100.0%)   dense_of32/nl_of32[0, 1]   
     dense_dense (Dense, Dense)      [b:None,c:10]   70/280       70     input_0         |   -280(-100.0%)   -70(-100.0%)  
     dense (Nonlinearity, Dense)     [b:None,c:10]                10     dense_dense     |                   -10(-100.0%)  
--------------------------------------------------------------------------------------------------------------------------------------------------------
1    dense_1_dense (Dense, Dense)    [b:None,c:1]    11/44        11     dense           |                   +10(+90.9%)    dense_of32/nl_of32[o][2, 3]
     dense_1 (Nonlinearity, Dense)   [b:None,c:1]                 10     dense_1_dense   |                   -10(-100.0%)  
--------------------------------------------------------------------------------------------------------------------------------------------------------
model/c-model: macc=101/101  weights=324/324  activations=--/64 io=--/0



Generated C-graph summary
------------------------------------------------------------------------------------------------------------------------
model name            : modello_asc_2
c-name                : network
c-node #              : 4
c-array #             : 9
activations size      : 64 (1 segment)
weights size          : 324 (1 segment)
macc                  : 101
inputs                : ['input_0_output']
outputs               : ['dense_1_output']

C-Arrays (9)
-----------------------------------------------------------------------------------------------------
c_id   name (*_array)          item/size   domain/mem-pool           c-type        fmt       comment
-----------------------------------------------------------------------------------------------------
0      dense_dense_output      10/40       activations/**default**   float         float32          
1      dense_output            10/40       activations/**default**   float         float32          
2      dense_1_dense_output    1/4         activations/**default**   float         float32          
3      dense_1_output          1/4         activations/**default**   float         float32   /output
4      dense_dense_weights     60/240      weights/weights           const float   float32          
5      dense_dense_bias        10/40       weights/weights           const float   float32          
6      dense_1_dense_weights   10/40       weights/weights           const float   float32          
7      dense_1_dense_bias      1/4         weights/weights           const float   float32          
8      input_0_output          6/24        activations/**default**   float         float32   /input 
-----------------------------------------------------------------------------------------------------

C-Layers (4)
---------------------------------------------------------------------------------------------------
c_id   name (*_layer)   id   layer_type   macc   rom   tensors                    shape (array id)
---------------------------------------------------------------------------------------------------
0      dense_dense      0    dense        70     280   I: input_0_output          (1,1,1,6) (8)   
                                                       W: dense_dense_weights     (6,1,1,10) (4)  
                                                       W: dense_dense_bias        (1,1,1,10) (5)  
                                                       O: dense_dense_output      (1,1,1,10) (0)  
---------------------------------------------------------------------------------------------------
1      dense            0    nl           10     0     I: dense_dense_output      (1,1,1,10) (0)  
                                                       O: dense_output            (1,1,1,10) (1)  
---------------------------------------------------------------------------------------------------
2      dense_1_dense    1    dense        11     44    I: dense_output            (1,1,1,10) (1)  
                                                       W: dense_1_dense_weights   (10,1,1,1) (6)  
                                                       W: dense_1_dense_bias      (1,1,1,1) (7)   
                                                       O: dense_1_dense_output    (1,1,1,1) (2)   
---------------------------------------------------------------------------------------------------
3      dense_1          1    nl           10     0     I: dense_1_dense_output    (1,1,1,1) (2)   
                                                       O: dense_1_output          (1,1,1,1) (3)   
---------------------------------------------------------------------------------------------------



Number of operations per c-layer
------------------------------------------------------------------------------------------------
c_id    m_id   name (type)             #op (type)                       #param (sparsity)      
------------------------------------------------------------------------------------------------
0       0      dense_dense (dense)                  70 (smul_f32_f32)               70 (0.0286)
1       0      dense (nl)                           10 (op_f32_f32)                            
2       1      dense_1_dense (dense)                11 (smul_f32_f32)               11 (0.0000)
3       1      dense_1 (nl)                         10 (op_f32_f32)                            
------------------------------------------------------------------------------------------------
total                                              101                              81 (0.0247)

  Number of operation types
  ---------------------------------------------
  smul_f32_f32                  81       80.2%
  op_f32_f32                    20       19.8%

Complexity report (model)
----------------------------------------------------------------------------------
m_id   name            c_macc                    c_rom                     c_id  
----------------------------------------------------------------------------------
0      input_0         ||||||||||||||||  79.2%   ||||||||||||||||  86.4%   [0, 1]
1      dense_1_dense   ||||              20.8%   |||               13.6%   [2, 3]
----------------------------------------------------------------------------------
macc=101 weights=324 act=64 ram_io=0

Generated files (7)
--------------------------------------------------------------------------
C:\Users\giaco\.stm32cubemx\network_output\network_config.h
C:\Users\giaco\.stm32cubemx\network_output\network.h
C:\Users\giaco\.stm32cubemx\network_output\network.c
C:\Users\giaco\.stm32cubemx\network_output\network_data_params.h
C:\Users\giaco\.stm32cubemx\network_output\network_data_params.c
C:\Users\giaco\.stm32cubemx\network_output\network_data.h
C:\Users\giaco\.stm32cubemx\network_output\network_data.c
